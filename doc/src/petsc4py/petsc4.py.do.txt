TITLE: Parallelizing PDE solvers in Python with aid of petsc4py
AUTHOR: Christoffer Stausland at Department of Physics, University of Oslo
AUTHOR: Hans Petter Langtangen at Center for Biomedical Computing, Simula Research Laboratory and Department of Informatics, University of Oslo
AUTHOR: Xing Cai at Center for Biomedical Computing, Simula Research Laboratory and Department of Informatics, University of Oslo
DATE: today

__Abstract.__
This tutorial shows how to use `petsc4py` to easily go from a serial Python
PDE solver, potentially combined a Fortran, C, or C++ kernel for
the core numerics, to a parallel implementation.

======= PETSc and petsc4py =======

PETSc is a widely used library for doing operations on vectors and
matrices, including solving linear and nonlinear systems of algebraic
equations. The great advantage of PETSc is that the package simplies
parallel programming and yet achieves very high performance on
parallel computing platforms.

The `petsc4py` package is a Python interface to PETSc, which makes it
easy to parallelize vector and matrix operations, as well as linear and
nonlinear systems solution, in Python programs.

===== Parallelizing the dot product =====

===== Parallelizing integration =====

======= Explicit finite difference schemes =======

We turn our attention to PDE solvers that arise from explicit
finite difference schemes. A natural starting point is
the 1D wave equation

!bt
\[
\]
!et
and the finite difference scheme

...

where $u^n_i$ is the approximation to the solution at mesh point $x_i$
in the spatial domain $[0,L]$ and mesh point $t_n$ in the temporal
domain $[0,T]$.

